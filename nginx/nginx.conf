events {}

http {
    include       /etc/nginx/mime.types;   # <- imprescindible
    default_type  application/octet-stream;

    # Si tu mime.types es antiguo, añade mapeo explícito:
    types {
        application/javascript  js mjs;
        text/css                css;
        font/woff2              woff2;
    }
    # ============================
    # Upstream para /api
    # ============================
    upstream api_backend {
        # Cambia el/los server(s) por tus destinos reales
        server backend:3000;
        keepalive 32;
    }

    # ============================
    # HTTP: redirección a HTTPS
    # (ambos dominios)
    # ============================
    server {
        listen 80;
        listen [::]:80;
        server_name genaidebate.com babel78.duckdns.org;

        # Redirección 301 a HTTPS conservando host y URI
        return 301 https://$host$request_uri;
    }

    # ============================
    # HTTPS: example.com
    # ============================
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name genaidebate.com;

        # Certificados (cambia rutas por las tuyas)
        ssl_certificate     /etc/certs/genaidebate.com/fullchain.pem;
        ssl_certificate_key /etc/certs/genaidebate.com/privkey.pem;

        # (Opcional pero recomendado) TLS seguro por defecto
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # (Opcional) HSTS: fuerza HTTPS en el cliente
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Raíz del contenido estático de este dominio
        root /srv;
        index index.html;

        # ===== /api → upstream =====
        location /api/ {
            include /etc/nginx/conf.d/whitelist.conf;
            proxy_pass http://api_backend;

            # Cabeceras típicas de reverse proxy
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;

            # WebSocket / HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Upgrade    $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Opcionales recomendados
            proxy_read_timeout  60s;
            proxy_send_timeout  60s;
            proxy_redirect      off;
            proxy_buffering     on;
        }

    # Servir resto de rutas como sitio estático
        location / {
            include /etc/nginx/conf.d/whitelist.conf;
            try_files $uri $uri/ /index.html;
        }

        # Archivos estáticos con caché (opcional)
        location ~* \.(?:css|js|mjs|png|jpg|jpeg|gif|svg|webp|ico|woff2?)$ {
            include /etc/nginx/conf.d/whitelist.conf;
            expires 7d;
            access_log off;
            try_files $uri =404;
        }
    }

    # ============================
    # HTTPS: example.net
    # (misma lógica, otra raíz y otros certificados)
    # ============================
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name babel78.duckdns.org;

        ssl_certificate     /etc/certs/babel78.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/certs/babel78.duckdns.org/privkey.pem;

        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        root /srv;
        index index.html;

        # /api → mismo upstream compartido
        location /api/ {
            include /etc/nginx/conf.d/whitelist.conf;
            proxy_pass http://api_backend;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;

            proxy_http_version 1.1;
            proxy_set_header Upgrade    $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_read_timeout  60s;
            proxy_send_timeout  60s;
            proxy_redirect      off;
            proxy_buffering     on;
        }

        location / {
            include /etc/nginx/conf.d/whitelist.conf;
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(?:css|js|mjs|png|jpg|jpeg|gif|svg|webp|ico|woff2?)$ {
            include /etc/nginx/conf.d/whitelist.conf;
            expires 7d;
            access_log off;
            try_files $uri =404;
        }
    }

    # ============================
    # Map para Connection/Upgrade
    # (soporte WebSocket correcto)
    # ============================
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
}
